{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/OscarStaniszewski/Downloads/llm-boilerplate-master/llm-boilerplate-master/src/hooks/useChat.ts"],"sourcesContent":["import { useState } from \"react\";\n\ninterface Message {\n  role: \"user\" | \"assistant\" | \"tool\";\n  content: string;\n}\n\nexport function useChat() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendMessage = async (content: string) => {\n    setIsLoading(true);\n\n    const userMessage: Message = { role: \"user\", content };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n\n    try {\n      const response = await fetch(\"/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: content,\n          history: messages,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to send message\");\n      }\n\n      const data = await response.json();\n\n      const newMessages = data.response.messages.map((msg: Message) => ({\n        role: msg.role,\n        content: msg.content,\n      }));\n      setMessages((prev) => [...prev, ...newMessages]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      // Add error message to chat\n      const errorMessage: Message = {\n        role: \"assistant\",\n        content: \"Sorry, there was an error processing your message.\",\n      };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    messages,\n    sendMessage,\n    isLoading,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;AAOO,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,cAAc,OAAO;QACzB,aAAa;QAEb,MAAM,cAAuB;YAAE,MAAM;YAAQ;QAAQ;QACrD,MAAM,kBAAkB;eAAI;YAAU;SAAY;QAClD,YAAY;QAEZ,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,aAAa;gBACxC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,SAAS;oBACT,SAAS;gBACX;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,MAAM,cAAc,KAAK,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAiB,CAAC;oBAChE,MAAM,IAAI,IAAI;oBACd,SAAS,IAAI,OAAO;gBACtB,CAAC;YACD,YAAY,CAAC,OAAS;uBAAI;uBAAS;iBAAY;QACjD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,4BAA4B;YAC5B,MAAM,eAAwB;gBAC5B,MAAM;gBACN,SAAS;YACX;YACA,YAAY,CAAC,OAAS;uBAAI;oBAAM;iBAAa;QAC/C,SAAU;YACR,aAAa;QACf;IACF;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/OscarStaniszewski/Downloads/llm-boilerplate-master/llm-boilerplate-master/src/app/components/Message.tsx"],"sourcesContent":["import { Message as OllamaMessage } from \"ollama\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\ninterface MessageProps {\n  role: OllamaMessage[\"role\"];\n  content: string;\n  isLoading?: boolean;\n}\n\nexport function Message({ role, content, isLoading }: MessageProps) {\n  const isUser = role === \"user\";\n\n  let thinking: string | null = null;\n  let response: string = content;\n\n  if (!isUser && content.includes(\"<think>\")) {\n    const parts = content.split(\"</think>\");\n    thinking = parts[0]?.replace(\"<think>\", \"\").trim() || null;\n    response = parts.slice(1).join(\"</think>\").trim();\n  }\n\n  return (\n    <div\n      className={`p-4 rounded-lg ${\n        isUser\n          ? \"bg-red-600 ml-auto hover:bg-blue-700\"\n          : \"bg-blue-800 hover:bg-gray-750\"\n      } max-w-[80%] transition-colors duration-200`}\n    >\n      <p className=\"text-sm font-semibold mb-1 text-gray-300\">\n        {isUser ? \"You\" : \"Assistant\"}\n      </p>\n      {isLoading ? (\n        <div className=\"animate-pulse\">\n          <p className=\"text-gray-100\">Processing...</p>\n        </div>\n      ) : (\n        <div className=\"text-gray-100 prose prose-invert max-w-none\">\n          {!isUser && thinking && (\n            <div className=\"mb-3 p-2 bg-gray-800/50 rounded text-xs text-gray-400 border border-gray-700/50\">\n              <p className=\"mb-1 text-gray-500\">Thinking:</p>\n              <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                {thinking}\n              </ReactMarkdown>\n            </div>\n          )}\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>{response}</ReactMarkdown>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAQO,SAAS,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAgB;IAChE,MAAM,SAAS,SAAS;IAExB,IAAI,WAA0B;IAC9B,IAAI,WAAmB;IAEvB,IAAI,CAAC,UAAU,QAAQ,QAAQ,CAAC,YAAY;QAC1C,MAAM,QAAQ,QAAQ,KAAK,CAAC;QAC5B,WAAW,KAAK,CAAC,EAAE,EAAE,QAAQ,WAAW,IAAI,UAAU;QACtD,WAAW,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,IAAI;IACjD;IAEA,qBACE,8OAAC;QACC,WAAW,CAAC,eAAe,EACzB,SACI,yCACA,gCACL,2CAA2C,CAAC;;0BAE7C,8OAAC;gBAAE,WAAU;0BACV,SAAS,QAAQ;;;;;;YAEnB,0BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;qCAG/B,8OAAC;gBAAI,WAAU;;oBACZ,CAAC,UAAU,0BACV,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAAqB;;;;;;0CAClC,8OAAC,wLAAA,CAAA,UAAa;gCAAC,eAAe;oCAAC,6IAAA,CAAA,UAAS;iCAAC;0CACtC;;;;;;;;;;;;kCAIP,8OAAC,wLAAA,CAAA,UAAa;wBAAC,eAAe;4BAAC,6IAAA,CAAA,UAAS;yBAAC;kCAAG;;;;;;;;;;;;;;;;;;AAKtD","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/OscarStaniszewski/Downloads/llm-boilerplate-master/llm-boilerplate-master/src/app/components/ChatInterface.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { useChat } from \"@/hooks/useChat\";\nimport { Message } from \"./Message\";\n\nexport function ChatInterface() {\n  const [message, setMessage] = useState(\"\");\n  const { messages, sendMessage, isLoading } = useChat();\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isLoading]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (message.trim()) {\n      sendMessage(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen max-w-4xl mx-auto p-4 text-gray-100\">\n    <h1 id=\"title\">Ollana Unana</h1>\n      <div className=\"flex-1 overflow-y-auto mb-4 space-y-4 scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-gray-800\">\n        {messages\n          .filter((msg) => msg.role !== \"tool\")\n          .map((msg, index) => (\n            <Message key={index} role={msg.role} content={msg.content} />\n          ))}\n        {isLoading && <Message role=\"assistant\" content=\"\" isLoading={true} />}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"flex gap-2\">\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n          className=\"flex-1 p-3 bg-gray-800 border border-gray-700 rounded-md text-gray-100 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n        <button\n          type=\"submit\"\n          disabled={isLoading}\n          className=\"px-6 py-3 bg-red-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-700 disabled:cursor-not-allowed transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900\"\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IACnD,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,MAAM,iBAAiB;QACrB,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;QAAU;KAAU;IAExB,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,QAAQ,IAAI,IAAI;YAClB,YAAY;YACZ,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACf,8OAAC;gBAAG,IAAG;0BAAQ;;;;;;0BACb,8OAAC;gBAAI,WAAU;;oBACZ,SACE,MAAM,CAAC,CAAC,MAAQ,IAAI,IAAI,KAAK,QAC7B,GAAG,CAAC,CAAC,KAAK,sBACT,8OAAC,oIAAA,CAAA,UAAO;4BAAa,MAAM,IAAI,IAAI;4BAAE,SAAS,IAAI,OAAO;2BAA3C;;;;;oBAEjB,2BAAa,8OAAC,oIAAA,CAAA,UAAO;wBAAC,MAAK;wBAAY,SAAQ;wBAAG,WAAW;;;;;;kCAC9D,8OAAC;wBAAI,KAAK;;;;;;;;;;;;0BAGZ,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;wBAC1C,aAAY;wBACZ,WAAU;;;;;;kCAEZ,8OAAC;wBACC,MAAK;wBACL,UAAU;wBACV,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT","debugId":null}}]
}